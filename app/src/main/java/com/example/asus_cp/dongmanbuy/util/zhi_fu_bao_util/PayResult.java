package com.example.asus_cp.dongmanbuy.util.zhi_fu_bao_util;import android.text.TextUtils;import java.util.TreeSet;public class PayResult {	private String resultStatus;	private String result;	private String memo;	public PayResult(String rawResult) {		if (TextUtils.isEmpty(rawResult))			return;		String[] resultParams = rawResult.split(";");		for (String resultParam : resultParams) {			if (resultParam.startsWith("resultStatus")) {				resultStatus = gatValue(resultParam, "resultStatus");			}			if (resultParam.startsWith("result")) {				result = gatValue(resultParam, "result");			}			if (resultParam.startsWith("memo")) {				memo = gatValue(resultParam, "memo");			}		}	}	@Override	public String toString() {		return "resultStatus={" + resultStatus + "};memo={" + memo				+ "};result={" + result + "}";	}	private String gatValue(String content, String key) {		String prefix = key + "={";		return content.substring(content.indexOf(prefix) + prefix.length(),				content.lastIndexOf("}"));	}	/**	 * @return the resultStatus	 */	public String getResultStatus() {		return resultStatus;	}	/**	 * @return the memo	 */	public String getMemo() {		return memo;	}	/**	 * @return the result	 */	public String getResult() {		return result;	}	/**	 * 获取签名类型	 */	public static String getSignType(String s){		int start=s.indexOf("&sign_type");		int end=s.indexOf("&sign=");		String type=s.substring(start+1,end);		return getStringByDeng(type);	}	/**	 * 获取签名的内容	 */	public static String getSignContent(String s){		int start=s.lastIndexOf("&");		String cont=s.substring(start+1);		return getStringByDeng(cont);	}	/**	 * 获取原始签名的字符串	 */	public static String getYuanShiContent(String s){		int end=s.indexOf("&sign_type");		String result=s.substring(0,end);		return result;	}	/**	 * 按=分割字符串,返回后半部分	 */	public static String getStringByDeng(String s){		int start=s.indexOf("=");		return s.substring(start + 1);	}	/**	 * 将字符串转换成按照自然顺序排序的map	 */	public static String SortString(String s){		String[] list=s.split("&");		TreeSet<String> treeSet=new TreeSet<>();		for(int i=0;i<list.length;i++){			treeSet.add(list[i]);		}		StringBuilder sBuilder=new StringBuilder();		for(String item:treeSet){			sBuilder.append(item);			sBuilder.append("&");		}		sBuilder.deleteCharAt(sBuilder.lastIndexOf("&"));		System.out.println(sBuilder.toString());		return sBuilder.toString();	}}